{"version":3,"file":"static/js/969.43020c8b.chunk.js","mappings":"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","sources":["components/MovieList/MovieListItem/MovieListItem.style.js","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.style.js","components/SearchForm/SearchForm.jsx","pages/MoviePage/MoviePage.jsx","services/movie-api.js","utils/getPosterLink.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ItemWrapper = styled.div`\n  width: 300px;\n  flex-basis: calc(100% / 4 - 30px);\n  margin: 15px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: rgb(255, 215, 0);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-top: 5px solid rgb(0, 87, 183);\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 10px 20px;\n  color: #000;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noPoster from 'images/noPoster.png';\nimport {\n  MovieLink,\n  ItemWrapper,\n  Img,\n  TitleWrapper,\n  Title,\n} from './MovieListItem.style';\nimport { getPosterLink } from 'utils/getPosterLink';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <MovieLink\n      to={`/movies/${id}`}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <ItemWrapper>\n        <li>\n        {poster_path ?\n              <Img src={getPosterLink(poster_path)}\n                alt={title}/> :\n              <Img src={noPoster}\n                alt='No Poster'/>\n              }\n        </li>\n        <TitleWrapper>\n          <Title>{title ?? name}</Title>\n        </TitleWrapper>\n      </ItemWrapper>\n    </MovieLink>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: -15px;\n  flex-wrap: wrap;\n  padding-top: 25px;\n  padding-bottom: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieListItem } from './MovieListItem/MovieListItem';\nimport { List } from './MovieList.style';\n\nexport const MovieList = ({ movies }) => {\n  return (\n      <List>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.any.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  margin: 25px 50px;\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 400px;\n  height: 25px;\n  border-radius: 5px;\n  padding-left: 10px;\n  outline: none;\n  border: none;\n  background-color: blanchedalmond;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 30px;\n  height: 30px;\n  margin-left: 5px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  background-color: blanchedalmond;\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  height: 25px;\n  width: 25px;\n  background-color: blanchedalmond;\n`;","import { Formik } from 'formik';\nimport { StyledForm, StyledInput, StyledButton, Icon } from './SearchForm.style';\n\n\nexport const SearchForm = ({onSubmit, value}) => {\nreturn (\n    <Formik\n        initialValues={{ query: value ?? '' }}\n        onSubmit={value => {\n          onSubmit(value);\n        }}\n      >\n      <StyledForm>\n        <StyledInput\n          type=\"text\"\n          name=\"query\"\n          autoFocus={true}\n        />\n        <StyledButton type=\"submit\">\n          <Icon />\n        </StyledButton>\n      </StyledForm>\n    </Formik>\n  );\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { searchMovies } from 'services/movie-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      setLoading(true);\n      searchMovies(newQuery)\n        .then(results => {\n          results.length !== 0\n            ? setMovies([...results])\n            : Notiflix.Notify.failure(\n                \"Sorry, we didn't find any movies matching your search. Please, try again\"\n              );\n        })\n        .catch(error => Notiflix.Notify.failure(error))\n        .finally(() => setLoading(false));\n    }\n  }, [searchParams]);\n\n  const onFormSubmit = value => {\n    if (value.query.trim() === '') {\n      Notiflix.Notify.failure(\"Please, enter correct movie's name\");\n      return;\n    } else {\n      const newQuery = value.query !== '' ?  value.query : '';\n      setSearchParams({ 'query': newQuery });}\n  };\n\n  return (\n    <>\n    <SearchForm onSubmit={onFormSubmit} value={searchParams.get('query')} />\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=c0a65f93ad9c41c31d77ca2daaf180b1\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c0a65f93ad9c41c31d77ca2daaf180b1';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async query => {\n  const response = await customAxios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await customAxios.get(\n    `/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","export const getPosterLink = (poster) => `https://image.tmdb.org/t/p/w300/${poster}`;"],"names":["MovieLink","styled","Link","ItemWrapper","Img","TitleWrapper","Title","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","state","from","pathname","search","src","getPosterLink","alt","noPoster","List","MovieList","movies","map","StyledForm","Form","StyledInput","Field","StyledButton","Icon","FcSearch","SearchForm","onSubmit","value","initialValues","query","type","autoFocus","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","searchMovies","then","results","length","Notiflix","catch","error","finally","trim","Loader","API_KEY","customAxios","axios","baseURL","params","api_key","response","data","getTrending","getDetails","movieId","getCast","cast","getReviews","poster"],"sourceRoot":""}