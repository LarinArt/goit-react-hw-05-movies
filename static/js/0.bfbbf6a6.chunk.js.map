{"version":3,"file":"static/js/0.bfbbf6a6.chunk.js","mappings":"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","sources":["components/MovieList/MovieListItem/MovieListItem.style.js","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","components/Pages/MoviePage/MoviePage.style.js","components/Pages/MoviePage/MoviePage.jsx","services/movie-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ItemWrapper = styled.div`\n  width: 300px;\n  flex-basis: calc(100% / 4 - 30px);\n  margin-top: 30px;\n  margin-left: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: rgb(255, 215, 0);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-top: 5px solid rgb(0, 87, 183);\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 10px 20px;\n  color: #000;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieLink,\n  ItemWrapper,\n  Img,\n  TitleWrapper,\n  Title,\n} from './MovieListItem.style';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <MovieLink\n      to={`/movies/${id}`}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <ItemWrapper>\n        <li>\n          <Img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={title}\n          />\n        </li>\n        <TitleWrapper>\n          <Title>{title ?? name}</Title>\n        </TitleWrapper>\n      </ItemWrapper>\n    </MovieLink>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -30px;\n  margin-left: -30px;\n  flex-wrap: wrap;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieListItem } from './MovieListItem/MovieListItem';\nimport { Wrapper, List } from './MovieList.style';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Form = styled.form`\n  position: fixed;\n  top: 10px;\n  z-index: 101;\n  display: flex;\n  align-items: center;\n  margin-left: 270px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  height: 25px;\n  border-radius: 5px;\n  padding-left: 10px;\n  outline: none;\n  border: none;\n  background-color: blanchedalmond;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  width: 30px;\n  height: 30px;\n  margin-left: 5px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  background-color: blanchedalmond;\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  height: 25px;\n  width: 25px;\n  background-color: blanchedalmond;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { searchMovies } from 'services/movie-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Form, Input, Button, Icon } from './MoviePage.style';\n\nconst MoviePage = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = element => {\n    setSearchQuery(element.currentTarget.value);\n  };\n  const onFormSubmit = element => {\n    element.preventDefault();\n\n    const newQuery = element.target.elements.query.value.toLowerCase();\n    if (newQuery.trim() === '') {\n      Notiflix.Notify.failure(\"Please, enter correct movie's name\");\n      return;\n    }\n    setSearchParams({ query: newQuery });\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      setLoading(true);\n      searchMovies(newQuery)\n        .then(results => {\n          results.length !== 0\n            ? setMovies([...results])\n            : Notiflix.Notify.failure(\n                \"Sorry, we didn't find any movies matching your search. Please, try again\"\n              );\n        })\n        .catch(error => setError(error.message))\n        .finally(() => setLoading(false));\n      setSearchQuery(searchParams.get('query'));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form onSubmit={onFormSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={searchQuery}\n          onChange={handleChange}\n          autoFocus={true}\n        />\n        <Button type=\"submit\">\n          <Icon />\n        </Button>\n      </Form>\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=c0a65f93ad9c41c31d77ca2daaf180b1\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c0a65f93ad9c41c31d77ca2daaf180b1';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async query => {\n  const response = await customAxios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await customAxios.get(\n    `/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["MovieLink","styled","Link","ItemWrapper","Img","TitleWrapper","Title","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","state","from","pathname","search","src","alt","Wrapper","List","MovieList","movies","map","Form","Input","Button","Icon","FcSearch","useState","searchQuery","setSearchQuery","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","searchMovies","then","results","length","Notiflix","catch","message","finally","onSubmit","element","preventDefault","target","elements","query","value","toLowerCase","trim","type","onChange","currentTarget","autoFocus","Loader","API_KEY","customAxios","axios","baseURL","params","api_key","response","data","getTrending","getDetails","movieId","getCast","cast","getReviews"],"sourceRoot":""}