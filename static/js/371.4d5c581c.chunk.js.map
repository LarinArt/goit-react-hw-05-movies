{"version":3,"file":"static/js/371.4d5c581c.chunk.js","mappings":"8PAEaA,EAAiBC,EAAAA,GAAAA,IAAH,4JAQdC,EAAOD,EAAAA,GAAAA,GAAH,+DAKJE,EAAOF,EAAAA,GAAAA,GAAH,+EAMJG,EAASH,EAAAA,GAAAA,GAAH,4EAKNI,EAAUJ,EAAAA,GAAAA,EAAH,4EAKPK,EAAUL,EAAAA,GAAAA,EAAH,0E,SCrBPM,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEtB,OACE,+BACE,SAACR,EAAD,WACE,SAACE,EAAD,UACGM,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,OAA5B,OACX,UAACV,EAAD,YACE,SAACC,EAAD,UAASS,KACT,SAACR,EAAD,UAAU,IAAIS,KAAKH,GAAYI,wBAC/B,SAACT,EAAD,UAAUM,MAHDF,a,UCQzB,EAnBoB,WAClB,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOV,EAAP,KAAgBW,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWP,GACRQ,MAAK,SAAAC,GAAO,OAAIN,EAAWM,MAC3BC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,cAChC,CAACX,KAGF,iCACIR,IAAW,SAACoB,EAAA,EAAD,IACZpB,IAAW,SAACD,EAAD,CAASC,QAASA,IAC7BY,IAAS","sources":["components/Reviews/Reviews.style.js","components/Reviews/Reviews.jsx","components/Pages/ReviewsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsWrapper = styled.div`\n  max-width: 1400px;\n  margin: 50px auto;\n  padding-top: 50px;\n  padding-bottom: 50px;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const List = styled.ul`\n  padding: 20px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const Author = styled.h2`\n  margin-bottom: 10px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const Created = styled.p`\n  margin-bottom: 20px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const Content = styled.p`\n  text-align: start;\n  color: rgb(255, 215, 0);\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ReviewsWrapper,\n  List,\n  Item,\n  Author,\n  Created,\n  Content,\n} from './Reviews.style';\n\nexport const Reviews = ({ reviews }) => {\n  if ({ reviews }) {\n    return (\n      <>\n        <ReviewsWrapper>\n          <List>\n            {reviews.map(({ id, created_at, content, author }) => (\n              <Item key={id}>\n                <Author>{author}</Author>\n                <Created>{new Date(created_at).toLocaleDateString()}</Created>\n                <Content>{content}</Content>\n              </Item>\n            ))}\n          </List>\n        </ReviewsWrapper>\n      </>\n    );\n  }\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      created_at: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/movie-api';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(results => setReviews(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {!reviews && <Loader />}\n      {reviews && <Reviews reviews={reviews} />}\n      {error && <p>Something went wrong, please try again later!g</p>}\n    </>\n  );\n};\nexport default ReviewsPage;\n"],"names":["ReviewsWrapper","styled","List","Item","Author","Created","Content","Reviews","reviews","map","id","created_at","content","author","Date","toLocaleDateString","movieId","useParams","useState","setReviews","error","setError","useEffect","getReviews","then","results","catch","message","Loader"],"sourceRoot":""}