{"version":3,"file":"static/js/903.c5b49bc3.chunk.js","mappings":"sLAEaA,E,QAAQC,GAAAA,EAAH,gG,uLCCLC,EAAUD,EAAAA,GAAAA,IAAH,kLAUPE,EAAMF,EAAAA,GAAAA,IAAH,+CAIHG,EAAOH,EAAAA,GAAAA,IAAH,4DAKJI,EAAYJ,EAAAA,GAAAA,GAAH,4EAKTK,EAAcL,EAAAA,GAAAA,GAAH,4EAKXM,EAAQN,EAAAA,GAAAA,EAAH,4EAKLO,EAAWP,EAAAA,GAAAA,GAAH,4EAKRQ,EAAeR,EAAAA,GAAAA,EAAH,kGAMZS,EAAST,EAAAA,GAAAA,GAAH,4EAKNU,EAAaV,EAAAA,GAAAA,EAAH,oDAIVW,EAAcX,EAAAA,GAAAA,IAAH,8HAOXY,GAAeZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,yT,kBC5CZc,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAElCC,EAMEF,EANFE,eACAC,EAKEH,EALFG,OACAC,EAIEJ,EAJFI,SACAC,EAGEL,EAHFK,YACAC,EAEEN,EAFFM,aACAC,EACEP,EADFO,aAGIC,EAAYL,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,MAEvD,OACE,iCACE,UAAC1B,EAAD,WACCmB,GACO,SAAClB,EAAD,CAAK0B,KAAKC,EAAAA,EAAAA,GAAcT,GACtBU,IAAKb,KACP,SAACf,EAAD,CAAK0B,IAAKG,EACRD,IAAI,eAEZ,UAAC3B,EAAD,YACE,SAACC,EAAD,UAAYa,KACZ,UAACZ,EAAD,gBAAgBgB,EAAhB,QACA,UAACf,EAAD,0BAAoBgB,MACpB,SAACf,EAAD,wBACA,SAACC,EAAD,UAAeW,KACf,SAACV,EAAD,sBACA,SAACC,EAAD,UAAaa,WAGjB,UAACZ,EAAD,YACE,SAACC,EAAD,CAAcoB,GAAG,OAAOC,MAAO,CAACC,KAAMlB,GAAtC,mBAGA,SAACJ,EAAD,CAAcoB,GAAG,UAAUC,MAAO,CAACC,KAAMlB,GAAzC,yBAIF,SAAC,EAAAmB,SAAD,WACE,SAAC,KAAD,UC1DKC,EAAiBpC,EAAAA,GAAAA,OAAH,2X,UCqC3B,EA/ByB,WACvB,IAAQqC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOxB,EAAP,KAAcyB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACX5B,GAAW6B,EAAAA,EAAAA,MAYjB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWV,GACRW,MAAK,SAAAC,GAAO,OAAIT,EAASS,MACzBC,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAMU,cAChC,CAACd,KAGF,iCACE,SAACD,EAAD,CAAgBgB,KAAK,SAASC,QAZjB,WAAO,IAAD,IACrBV,EAAQ,iBAAC3B,QAAD,IAACA,GAAD,UAACA,EAAUiB,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAWhC,wBAGEnB,IAAS,SAACuC,EAAA,EAAD,IACVvC,IAAS,SAACD,EAAD,CAAcC,MAAOA,IAC9B0B,IACC,SAAC1C,EAAA,EAAD,wE,iMC7BFwD,EAAU,mCAEVC,E,MAAcC,GAAAA,OAAa,CAC/BC,QAJe,+BAKfC,OAAQ,CACNC,QAASL,KAIAM,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAYO,IAAZ,gCACIR,EADJ,wCAC2CO,EAD3C,wBADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKhB,SAJK,2CAAH,sDAOZiB,EAAW,mCAAG,oGACFV,EAAYO,IAAZ,qCACSR,IAFP,cACnBS,EADmB,yBAIlBA,EAASC,KAAKhB,SAJI,2CAAH,qDAOXF,EAAU,mCAAG,WAAMV,GAAN,uFACDmB,EAAYO,IAAZ,iBACX1B,EADW,oBACQkB,EADR,oBADC,cAClBS,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVE,EAAO,mCAAG,WAAM9B,GAAN,uFACEmB,EAAYO,IAAZ,iBACX1B,EADW,4BACgBkB,EADhB,oBADF,cACfS,EADe,yBAIdA,EAASC,KAAKG,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMhC,GAAN,uFACDmB,EAAYO,IAAZ,iBACX1B,EADW,4BACgBkB,EADhB,2BADC,cAClBS,EADkB,yBAIjBA,EAASC,KAAKhB,SAJG,2CAAH,uD,oDCzChB,IAAMpB,EAAgB,SAACyC,GAAD,gDAA+CA,K","sources":["components/ui/Error.js","components/MovieDetails/MovieDetails.style.js","components/MovieDetails/MovieDetails.jsx","components/ui/CallbackButton.js","pages/MovieDetailsPage/index.jsx","services/movie-api.js","utils/getPosterLink.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Error = styled.p`\n  font-size: 20px;\n  padding-left: 25px;\n  color: rgb(255, 215, 0);\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n@media (min-width: 768px){\n  display: flex;\n  align-items: flex-start;\n}\n  margin: 0 auto;\n  margin: 25px;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n`;\n\nexport const Info = styled.div`\n  padding: 20px;\n  height: 100%; \n`;\n\nexport const InfoTitle = styled.h1`\n  margin-bottom: 10px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const ReleaseDate = styled.h2`\n  margin-bottom: 20px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 30px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const Overview = styled.h2`\n  margin-bottom: 10px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const OverviewInfo = styled.p`\n  text-align: start;\n  margin-bottom: 30px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const Genres = styled.h2`\n  margin-bottom: 10px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const GenresInfo = styled.p`\n  color: rgb(255, 215, 0);\n`;\n\nexport const Information = styled.div`\n  background-color: rgb(255, 215, 0);\n  color: black;\n  padding: 25px;\n  color: rgb(255, 215, 0);\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:not(:last-child) {\n    margin-right: 25px;\n  }\n\n  &:hover,\n  &:focus {\n    color: rgb(0, 87, 183);\n    transition: all 250ms linear;\n  }\n`;\n","import { Suspense } from \"react\";\nimport {Outlet} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noPoster from 'images/noPoster.png';\nimport {\n  Wrapper,\n  Img,\n  Info,\n  InfoTitle,\n  ReleaseDate,\n  Score,\n  Overview,\n  OverviewInfo,\n  Genres,\n  GenresInfo,\n  Information,\n  NavLinkStyle,\n} from './MovieDetails.style';\nimport { getPosterLink } from \"utils/getPosterLink\";\n\nexport const MovieDetails = ({ movie, location }) => {\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  const genresAll = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <Wrapper>\n      {poster_path ?\n              <Img src={getPosterLink(poster_path)}\n                alt={original_title}/> :\n              <Img src={noPoster}\n                alt='No Poster'/>\n              }\n        <Info>\n          <InfoTitle>{original_title}</InfoTitle>\n          <ReleaseDate> ({release_date})</ReleaseDate>\n          <Score>User Score: {vote_average}</Score>\n          <Overview>Overview</Overview>\n          <OverviewInfo>{overview}</OverviewInfo>\n          <Genres>Genres</Genres>\n          <GenresInfo>{genresAll}</GenresInfo>\n        </Info>\n      </Wrapper>\n      <Information>\n        <NavLinkStyle to=\"cast\" state={{from: location}}>\n          Cast\n        </NavLinkStyle>\n        <NavLinkStyle to=\"reviews\" state={{from: location}}>\n          Reviews\n        </NavLinkStyle>\n      </Information>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const CallbackButton = styled.button`\n  display: block;\n  width: 100px;\n  height: 30px;\n  margin-top: 20px;\n  margin-left: 60px;\n  color: black;\n  font-size: 18px;\n  font-weight: 700;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(255, 215, 0);\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    color: rgb(0, 87, 183);\n    transition: all 250ms linear;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { getDetails } from 'services/movie-api';\nimport { Loader } from 'components/ui/Loader/Loader';\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\nimport { CallbackButton } from 'components/ui/CallbackButton';\nimport { Error } from 'components/ui/Error';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    getDetails(movieId)\n      .then(results => setMovie(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      <CallbackButton type=\"button\" onClick={onGoBack}>\n        To Movies\n      </CallbackButton>\n      {!movie && <Loader />}\n      {movie && <MovieDetails movie={movie} />}\n      {error && (\n        <Error>404 Something went wrong, please try again later! :(</Error>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=c0a65f93ad9c41c31d77ca2daaf180b1\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c0a65f93ad9c41c31d77ca2daaf180b1';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async query => {\n  const response = await customAxios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await customAxios.get(\n    `/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","export const getPosterLink = (poster) => `https://image.tmdb.org/t/p/w300/${poster}`;"],"names":["Error","styled","Wrapper","Img","Info","InfoTitle","ReleaseDate","Score","Overview","OverviewInfo","Genres","GenresInfo","Information","NavLinkStyle","NavLink","MovieDetails","movie","location","original_title","genres","overview","poster_path","release_date","vote_average","genresAll","map","genre","name","join","src","getPosterLink","alt","noPoster","to","state","from","Suspense","CallbackButton","movieId","useParams","useState","setMovie","error","setError","navigate","useNavigate","useLocation","useEffect","getDetails","then","results","catch","message","type","onClick","Loader","API_KEY","customAxios","axios","baseURL","params","api_key","searchMovies","query","get","response","data","getTrending","getCast","cast","getReviews","poster"],"sourceRoot":""}