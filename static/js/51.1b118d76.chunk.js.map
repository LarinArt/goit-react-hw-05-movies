{"version":3,"file":"static/js/51.1b118d76.chunk.js","mappings":"6NAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kDAITE,EAAcF,EAAAA,GAAAA,IAAH,yaAoBXG,EAAMH,EAAAA,GAAAA,IAAH,0DAKHI,EAAeJ,EAAAA,GAAAA,IAAH,wIAOZK,EAAQL,EAAAA,GAAAA,EAAH,iL,6BC3BLM,EAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtBC,EAAiCD,EAAjCC,YAAaC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,MAAOC,EAAOJ,EAAPI,GAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACd,EAAD,CACEe,GAAE,kBAAaH,GACfI,MAAO,CACLC,KAAMJ,EAASK,SAAWL,EAASM,QAHvC,UAME,UAAChB,EAAD,YACE,yBACE,SAACC,EAAD,CACEgB,IAAKX,EAAW,UAAMY,EAAAA,GAAN,OAAgBZ,GAAhB,UAAmCa,GACnDC,IAAKZ,OAGT,SAACN,EAAD,WACE,SAACC,EAAD,iBAAQK,QAAR,IAAQA,EAAAA,EAASD,YC7Bdc,EAAUvB,EAAAA,GAAAA,IAAH,iEAKPwB,EAAOxB,EAAAA,GAAAA,GAAH,8MCHJyB,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,SAACH,EAAD,WACE,SAACC,EAAD,UACGE,EAAOC,KAAI,SAAApB,GAAK,OACf,SAACD,EAAD,CAA8BC,MAAOA,GAAjBA,EAAMI,a,qDCT7B,IAAMS,EAAO,oC,iMCIdQ,EAAU,mCAEVC,E,MAAcC,GAAAA,OAAa,CAC/BC,QAJe,+BAKfC,OAAQ,CACNC,QAASL,KAIAM,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAYO,IAAZ,gCACIR,EADJ,wCAC2CO,EAD3C,wBADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZC,EAAW,mCAAG,oGACFX,EAAYO,IAAZ,qCACSR,IAFP,cACnBS,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXE,EAAU,mCAAG,WAAMC,GAAN,uFACDb,EAAYO,IAAZ,iBACXM,EADW,oBACQd,EADR,oBADC,cAClBS,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACEb,EAAYO,IAAZ,iBACXM,EADW,4BACgBd,EADhB,oBADF,cACfS,EADe,yBAIdA,EAASC,KAAKM,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,uFACDb,EAAYO,IAAZ,iBACXM,EADW,4BACgBd,EADhB,2BADC,cAClBS,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,uD","sources":["components/MovieList/MovieListItem/MovieListItem.style.js","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","constants/constantsApi.js","services/movie-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ItemWrapper = styled.div`\n  width: 300px;\n  flex-basis: calc(100% / 4 - 30px);\n  margin-top: 30px;\n  margin-left: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: rgb(255, 215, 0);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-top: 5px solid rgb(0, 87, 183);\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 10px 20px;\n  color: #000;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieLink,\n  ItemWrapper,\n  Img,\n  TitleWrapper,\n  Title,\n} from './MovieListItem.style';\nimport NoImage from 'images/No_image_available.svg.png';\nimport { IMG_URL } from 'constants';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <MovieLink\n      to={`/movies/${id}`}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <ItemWrapper>\n        <li>\n          <Img\n            src={poster_path ? `${IMG_URL}${poster_path}` : `${NoImage}`}\n            alt={title}\n          />\n        </li>\n        <TitleWrapper>\n          <Title>{title ?? name}</Title>\n        </TitleWrapper>\n      </ItemWrapper>\n    </MovieLink>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -30px;\n  margin-left: -30px;\n  flex-wrap: wrap;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieListItem } from './MovieListItem/MovieListItem';\nimport { Wrapper, List } from './MovieList.style';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","export const IMG_URL = `https://image.tmdb.org/t/p/w300/`;\n\n// export default IMG_URL;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=c0a65f93ad9c41c31d77ca2daaf180b1\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c0a65f93ad9c41c31d77ca2daaf180b1';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async query => {\n  const response = await customAxios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await customAxios.get(\n    `/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["MovieLink","styled","Link","ItemWrapper","Img","TitleWrapper","Title","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","state","from","pathname","search","src","IMG_URL","NoImage","alt","Wrapper","List","MovieList","movies","map","API_KEY","customAxios","axios","baseURL","params","api_key","searchMovies","query","get","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews"],"sourceRoot":""}