{"version":3,"file":"static/js/833.73b1d996.chunk.js","mappings":"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","sources":["components/MovieList/MovieListItem/MovieListItem.style.js","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.style.js","pages/HomePage/HomePage.jsx","pages/MovieDetailsPage/MovieDetailsPage.style.js","services/movie-api.js","utils/getPosterLink.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ItemWrapper = styled.div`\n  width: 300px;\n  flex-basis: calc(100% / 4 - 30px);\n  margin: 15px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: rgb(255, 215, 0);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-top: 5px solid rgb(0, 87, 183);\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 10px 20px;\n  color: #000;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noPoster from 'images/noPoster.png';\nimport {\n  MovieLink,\n  ItemWrapper,\n  Img,\n  TitleWrapper,\n  Title,\n} from './MovieListItem.style';\nimport { getPosterLink } from 'utils/getPosterLink';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <MovieLink\n      to={`/movies/${id}`}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <ItemWrapper>\n        <li>\n        {poster_path ?\n              <Img src={getPosterLink(poster_path)}\n                alt={title}/> :\n              <Img src={noPoster}\n                alt='No Poster'/>\n              }\n        </li>\n        <TitleWrapper>\n          <Title>{title ?? name}</Title>\n        </TitleWrapper>\n      </ItemWrapper>\n    </MovieLink>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: -15px;\n  flex-wrap: wrap;\n  padding-top: 25px;\n  padding-bottom: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieListItem } from './MovieListItem/MovieListItem';\nimport { List } from './MovieList.style';\n\nexport const MovieList = ({ movies }) => {\n  return (\n      <List>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.any.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-left: 50px;\n  font-size: 32px;\n  margin-top: 25px;\n  color: rgb(255, 215, 0);\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'services/movie-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Title } from './HomePage.style';\nimport { Error } from 'pages/MovieDetailsPage/MovieDetailsPage.style';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getTrending()\n      .then(results => setMovies([...results]))\n      .catch(error => setError(error.message));\n  }, []);\n\n  return (\n    <>\n      <Title>Trending Movies</Title>\n      {!movies && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <Error>404, please try again later!</Error>}\n    </>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  width: 100px;\n  height: 30px;\n  margin-top: 20px;\n  margin-left: 60px;\n  color: black;\n  font-size: 18px;\n  font-weight: 700;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(255, 215, 0);\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    color: rgb(0, 87, 183);\n    transition: all 250ms linear;\n  }\n`;\nexport const Error = styled.p`\n  font-size: 20px;\n  padding-left: 25px;\n  color: rgb(255, 215, 0);\n`;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=c0a65f93ad9c41c31d77ca2daaf180b1\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c0a65f93ad9c41c31d77ca2daaf180b1';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async query => {\n  const response = await customAxios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await customAxios.get(\n    `/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","export const getPosterLink = (poster) => `https://image.tmdb.org/t/p/w300/${poster}`;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["MovieLink","styled","Link","ItemWrapper","Img","TitleWrapper","Title","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","state","from","pathname","search","src","getPosterLink","alt","noPoster","List","MovieList","movies","map","useState","setMovies","error","setError","useEffect","getTrending","then","results","catch","message","Loader","Button","Error","API_KEY","customAxios","axios","baseURL","params","api_key","searchMovies","query","get","response","data","getDetails","movieId","getCast","cast","getReviews","poster","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}