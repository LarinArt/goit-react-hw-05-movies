{"version":3,"file":"static/js/403.56db7410.chunk.js","mappings":"6TAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kJASVE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,gLAUXI,EAAeJ,EAAAA,GAAAA,OAAH,2WAoBZK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,8F,SCsBjB,EAxDkB,WAChB,OAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA6BA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAkC,OAA9BF,EAAaG,IAAI,SAAmB,CACtC,IAAMC,EAAWJ,EAAaG,IAAI,SAClCL,GAAW,IACXO,EAAAA,EAAAA,IAAaD,GACVE,MAAK,SAAAC,GACe,IAAnBA,EAAQC,OACJd,GAAU,OAAIa,IACdE,IAAAA,OAAAA,QACE,+EAGPC,OAAM,SAAAf,GAAK,OAAIC,EAASD,EAAMgB,YAC9BC,SAAQ,kBAAMd,GAAW,SAE7B,CAACE,KAGF,iCACE,SAAC,KAAD,CACEa,cAAe,CAAEC,MAAO,IACxBC,SAAU,SAAAC,IA/BK,SAAAA,GACnB,GAA2B,KAAvBA,EAAMF,MAAMG,OAAhB,CAIE,IAAMb,EAA2B,KAAhBY,EAAMF,MAAeE,EAAMF,MAAQ,GACpDb,EAAgB,CAAEa,MAAOV,SAJzBK,IAAAA,OAAAA,QAAwB,sCA8BpBS,CAAaF,IAHjB,UAME,UAAChC,EAAD,YACE,SAACG,EAAD,CAAagC,KAAK,OAAOC,KAAK,QAAQC,WAAW,KACjD,SAAChC,EAAD,CAAc8B,KAAK,SAAnB,UACE,SAAC7B,EAAD,WAILO,IAAW,SAACyB,EAAA,EAAD,IACX7B,IAAU,SAAC8B,EAAA,EAAD,CAAW9B,OAAQA,IAC7BE,IAAS","sources":["pagesnew/MoviePage/MoviePage.style.js","pagesnew/MoviePage/MoviePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const StyledForm = styled(Form)`\n  margin-top: 20px;\n  top: 10px;\n  z-index: 101;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 400px;\n  height: 25px;\n  border-radius: 5px;\n  padding-left: 10px;\n  outline: none;\n  border: none;\n  background-color: blanchedalmond;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 30px;\n  height: 30px;\n  margin-left: 5px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  background-color: blanchedalmond;\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  height: 25px;\n  width: 25px;\n  background-color: blanchedalmond;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport Notiflix from 'notiflix';\nimport { searchMovies } from 'services/movie-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { StyledForm, StyledInput, StyledButton, Icon } from './MoviePage.style';\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onFormSubmit = value => {\n    if (value.query.trim() === '') {\n      Notiflix.Notify.failure(\"Please, enter correct movie's name\");\n      return;\n    } else {\n      const newQuery = value.query !== '' ? value.query : '';\n      setSearchParams({ query: newQuery });\n    }\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      setLoading(true);\n      searchMovies(newQuery)\n        .then(results => {\n          results.length !== 0\n            ? setMovies([...results])\n            : Notiflix.Notify.failure(\n                \"Sorry, we didn't find any movies matching your search. Please, try again\"\n              );\n        })\n        .catch(error => setError(error.message))\n        .finally(() => setLoading(false));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <Formik\n        initialValues={{ query: '' }}\n        onSubmit={value => {\n          onFormSubmit(value);\n        }}\n      >\n        <StyledForm>\n          <StyledInput type=\"text\" name=\"query\" autoFocus={true} />\n          <StyledButton type=\"submit\">\n            <Icon />\n          </StyledButton>\n        </StyledForm>\n      </Formik>\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </>\n  );\n};\n\nexport default MoviePage;\n"],"names":["StyledForm","styled","Form","StyledInput","Field","StyledButton","Icon","FcSearch","useState","movies","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","searchMovies","then","results","length","Notiflix","catch","message","finally","initialValues","query","onSubmit","value","trim","onFormSubmit","type","name","autoFocus","Loader","MovieList"],"sourceRoot":""}