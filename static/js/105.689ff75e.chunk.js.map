{"version":3,"file":"static/js/105.689ff75e.chunk.js","mappings":"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","sources":["Pages/MoviePage/MoviePage.style.js","Pages/MoviePage/MoviePage.jsx","components/MovieList/MovieListItem/MovieListItem.style.js","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","services/movie-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const StyledForm = styled(Form)`\n  position: fixed;\n  top: 10px;\n  z-index: 101;\n  display: flex;\n  align-items: center;\n  margin-left: 270px;\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 400px;\n  height: 25px;\n  border-radius: 5px;\n  padding-left: 10px;\n  outline: none;\n  border: none;\n  background-color: blanchedalmond;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 30px;\n  height: 30px;\n  margin-left: 5px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  background-color: blanchedalmond;\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  height: 25px;\n  width: 25px;\n  background-color: blanchedalmond;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport Notiflix from 'notiflix';\nimport { searchMovies } from 'services/movie-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { StyledForm, StyledInput, StyledButton, Icon } from './MoviePage.style';\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onFormSubmit = value => {\n    if (value.query.trim() === '') {\n      Notiflix.Notify.failure(\"Please, enter correct movie's name\");\n      return;\n    } else {\n      const newQuery = value.query !== '' ?  value.query : '';\n      setSearchParams({ 'query': newQuery });}\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      setLoading(true);\n      searchMovies(newQuery)\n        .then(results => {\n          results.length !== 0\n            ? setMovies([...results])\n            : Notiflix.Notify.failure(\n                \"Sorry, we didn't find any movies matching your search. Please, try again\"\n              );\n        })\n        .catch(error => setError(error.message))\n        .finally(() => setLoading(false));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n    <Formik\n        initialValues={{ query: '' }}\n        onSubmit={value => {\n          onFormSubmit(value);\n        }}\n      >\n      <StyledForm>\n        <StyledInput\n          type=\"text\"\n          name=\"query\"\n          autoFocus={true}\n        />\n        <StyledButton type=\"submit\">\n          <Icon />\n        </StyledButton>\n      </StyledForm>\n      </Formik>\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </>\n  );\n};\n\nexport default MoviePage;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ItemWrapper = styled.div`\n  width: 300px;\n  flex-basis: calc(100% / 4 - 30px);\n  margin-top: 30px;\n  margin-left: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: rgb(255, 215, 0);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-top: 5px solid rgb(0, 87, 183);\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 10px 20px;\n  color: #000;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieLink,\n  ItemWrapper,\n  Img,\n  TitleWrapper,\n  Title,\n} from './MovieListItem.style';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <MovieLink\n      to={`/movies/${id}`}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <ItemWrapper>\n        <li>\n          <Img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={title}\n          />\n        </li>\n        <TitleWrapper>\n          <Title>{title ?? name}</Title>\n        </TitleWrapper>\n      </ItemWrapper>\n    </MovieLink>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -30px;\n  margin-left: -30px;\n  flex-wrap: wrap;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieListItem } from './MovieListItem/MovieListItem';\nimport { Wrapper, List } from './MovieList.style';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=c0a65f93ad9c41c31d77ca2daaf180b1\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c0a65f93ad9c41c31d77ca2daaf180b1';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async query => {\n  const response = await customAxios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await customAxios.get(\n    `/trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await customAxios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["StyledForm","styled","Form","StyledInput","Field","StyledButton","Icon","FcSearch","useState","movies","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","searchMovies","then","results","length","Notiflix","catch","message","finally","initialValues","query","onSubmit","value","trim","onFormSubmit","type","name","autoFocus","Loader","MovieList","MovieLink","Link","ItemWrapper","Img","TitleWrapper","Title","MovieListItem","movie","poster_path","title","id","location","useLocation","to","state","from","pathname","search","src","alt","Wrapper","List","map","API_KEY","customAxios","axios","baseURL","params","api_key","response","data","getTrending","getDetails","movieId","getCast","cast","getReviews"],"sourceRoot":""}